{"ast":null,"code":"import { Cliente } from '../modelo/Cliente';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servico/cliente.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PrincipalComponent_input_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 15);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_15_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cadastrar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 16);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_16_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 17);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_17_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.remover());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_input_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 18);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_input_18_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cancelar());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrincipalComponent_table_19_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function PrincipalComponent_table_19_tr_16_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.selecionarCliente(i_r15));\n    });\n    i0.ɵɵtext(13, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const c_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r15 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.city);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(c_r14.state);\n  }\n}\nfunction PrincipalComponent_table_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 19)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"#\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Idade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Selecionar\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"tbody\");\n    i0.ɵɵtemplate(16, PrincipalComponent_table_19_tr_16_Template, 14, 5, \"tr\", 20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.clientes);\n  }\n}\nexport class PrincipalComponent {\n  // Construtor\n  constructor(servico) {\n    this.servico = servico;\n    // Objeto do tipo Cliente\n    this.cliente = new Cliente();\n    // Variável para visibilidade dos botões\n    this.btnCadastro = true;\n    // Variável para visibilidade da tabela\n    this.tabela = true;\n    // JSON de clientes\n    this.clientes = [];\n  }\n  // Método de seleção\n  selecionar() {\n    this.servico.selecionar().subscribe(retorno => this.clientes = retorno);\n  }\n  // Método de cadastro\n  cadastrar() {\n    this.servico.cadastrar(this.cliente).subscribe(retorno => {\n      // Cadastrar o cliente no vetor\n      this.clientes.push(retorno);\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Mensagem\n      alert('Cliente cadastrado com sucesso!');\n    });\n  }\n  // Método para selecionar um cliente específico\n  selecionarCliente(posicao) {\n    // Selecionar cliente no vetor\n    this.cliente = this.clientes[posicao];\n    // Visibilidade dos botões\n    this.btnCadastro = false;\n    // Visibilidade da tabela\n    this.tabela = false;\n  }\n  // Método para editar clientes\n  editar() {\n    this.servico.editar(this.cliente).subscribe(retorno => {\n      // Obter posiçao do vetor onde está o cliente\n      let posicao = this.clientes.findIndex(obj => {\n        return obj.id == retorno.id;\n      });\n      // Alterar os dados do cliente no vetor\n      this.clientes[posicao] = retorno;\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n      // Visibilidade da tabela\n      this.tabela = true;\n      // Mensagem\n      alert('Cliente alterado com sucesso!');\n    });\n  }\n  // Método para remover clientes\n  remover() {\n    this.servico.remover(this.cliente.id).subscribe(retorno => {\n      // Obter posiçao do vetor onde está o cliente\n      let posicao = this.clientes.findIndex(obj => {\n        return obj.id == this.cliente.id;\n      });\n      // Remover cliente do vetor\n      this.clientes.splice(posicao, 1);\n      // Limpar formulário\n      this.cliente = new Cliente();\n      // Visibilidade dos botões\n      this.btnCadastro = true;\n      // Visibilidade da tabela\n      this.tabela = true;\n      // Mensagem\n      alert('Cliente removido com sucesso!');\n    });\n  }\n  // Método para cancelar\n  cancelar() {\n    // Limpar formulário\n    this.cliente = new Cliente();\n    // Visibilidade dos botões\n    this.btnCadastro = true;\n    // Visibilidade da tabela\n    this.tabela = true;\n  }\n  // Método de inicialização\n  ngOnInit() {\n    this.selecionar();\n  }\n}\nPrincipalComponent.ɵfac = function PrincipalComponent_Factory(t) {\n  return new (t || PrincipalComponent)(i0.ɵɵdirectiveInject(i1.ClienteService));\n};\nPrincipalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrincipalComponent,\n  selectors: [[\"app-principal\"]],\n  decls: 20,\n  vars: 9,\n  consts: [[1, \"container\", \"text-center\"], [1, \"row\", \"align-items-start\"], [1, \"col-12\", \"col-sm-12\"], [\"src\", \"assets/andersonfelix.webp\"], [1, \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Nome\", \"name\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"placeholder\", \"Idade\", \"name\", \"age\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Cidade\", \"name\", \"city\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Estado\", \"name\", \"state\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", \"value\", \"Cadastrar\", \"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Alterar\", \"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Remover\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cancelar\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"type\", \"button\", \"value\", \"Cadastrar\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Alterar\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Remover\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"type\", \"button\", \"value\", \"Cancelar\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n  template: function PrincipalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\");\n      i0.ɵɵelement(4, \"img\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.cliente.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.cliente.age = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.cliente.city = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PrincipalComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.cliente.state = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(15, PrincipalComponent_input_15_Template, 1, 0, \"input\", 10);\n      i0.ɵɵtemplate(16, PrincipalComponent_input_16_Template, 1, 0, \"input\", 11);\n      i0.ɵɵtemplate(17, PrincipalComponent_input_17_Template, 1, 0, \"input\", 12);\n      i0.ɵɵtemplate(18, PrincipalComponent_input_18_Template, 1, 0, \"input\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(19, PrincipalComponent_table_19_Template, 17, 1, \"table\", 14);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.age);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.city);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.cliente.state);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.btnCadastro);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tabela);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"img[_ngcontent-%COMP%]{\\r\\n   width: 250px; \\r\\n   margin-bottom: 30px;\\r\\n   border-radius: 6px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 6px;\\r\\n    border:1px solid #e3e3e3; \\r\\n}\\r\\n\\r\\ninput[type=\\\"button\\\"][_ngcontent-%COMP%]{\\r\\n    margin-right: 10px;\\r\\n}\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    border: 1px solid #fff;\\r\\n    background-color: #e3e3e3;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJpbmNpcGFsL3ByaW5jaXBhbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csWUFBWTtHQUNaLG1CQUFtQjtHQUNuQixrQkFBa0I7QUFDckI7Ozs7QUFJQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxzQkFBc0I7SUFDdEIseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1ne1xyXG4gICB3aWR0aDogMjUwcHg7IFxyXG4gICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbn1cclxuXHJcblxyXG5cclxuaW5wdXR7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCAjZTNlM2UzOyBcclxufVxyXG5cclxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXXtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG50YWJsZSB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2UzZTNlMztcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Cliente","i0","PrincipalComponent","constructor","servico","selecionar","subscribe","retorno","clientes","cadastrar","cliente","push","alert","selecionarCliente","posicao","btnCadastro","tabela","editar","findIndex","obj","id","remover","splice","cancelar","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\projetos\\2023-Spring-Boot-v3.0.1-MySQL-Angular-v15.0\\api-front\\src\\app\\principal\\principal.component.ts","C:\\projetos\\2023-Spring-Boot-v3.0.1-MySQL-Angular-v15.0\\api-front\\src\\app\\principal\\principal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Cliente } from '../modelo/Cliente';\r\nimport { ClienteService } from '../servico/cliente.service';\r\n\r\n@Component({\r\n  selector: 'app-principal',\r\n  templateUrl: './principal.component.html',\r\n  styleUrls: ['./principal.component.css']\r\n})\r\nexport class PrincipalComponent {\r\n\r\n    // Objeto do tipo Cliente\r\n    cliente = new Cliente();\r\n\r\n    // Variável para visibilidade dos botões\r\n    btnCadastro:boolean = true;\r\n\r\n    // Variável para visibilidade da tabela\r\n    tabela:boolean = true;\r\n\r\n    // JSON de clientes\r\n    clientes:Cliente[] = [];\r\n\r\n    // Construtor\r\n    constructor(private servico:ClienteService){}\r\n\r\n    // Método de seleção\r\n    selecionar():void{\r\n      this.servico.selecionar()\r\n      .subscribe(retorno => this.clientes = retorno);\r\n    }\r\n\r\n    // Método de cadastro\r\n    cadastrar():void{\r\n      this.servico.cadastrar(this.cliente)\r\n      .subscribe(retorno => { \r\n\r\n        // Cadastrar o cliente no vetor\r\n        this.clientes.push(retorno); \r\n\r\n        // Limpar formulário\r\n        this.cliente = new Cliente();\r\n\r\n        // Mensagem\r\n        alert('Cliente cadastrado com sucesso!');\r\n      });\r\n    }\r\n\r\n    // Método para selecionar um cliente específico\r\n    selecionarCliente(posicao:number):void{\r\n\r\n      // Selecionar cliente no vetor\r\n      this.cliente = this.clientes[posicao];\r\n\r\n      // Visibilidade dos botões\r\n      this.btnCadastro = false;\r\n\r\n      // Visibilidade da tabela\r\n      this.tabela = false;\r\n\r\n    }\r\n\r\n    // Método para editar clientes\r\n    editar():void{\r\n\r\n      this.servico.editar(this.cliente)\r\n      .subscribe(retorno => {\r\n\r\n        // Obter posiçao do vetor onde está o cliente\r\n        let posicao = this.clientes.findIndex(obj => {\r\n          return obj.id == retorno.id;\r\n        });\r\n\r\n        // Alterar os dados do cliente no vetor\r\n        this.clientes[posicao] = retorno;\r\n\r\n        // Limpar formulário\r\n        this.cliente = new Cliente();\r\n\r\n        // Visibilidade dos botões\r\n        this.btnCadastro = true;\r\n\r\n        // Visibilidade da tabela\r\n        this.tabela = true;\r\n\r\n        // Mensagem\r\n        alert('Cliente alterado com sucesso!');\r\n\r\n      });\r\n\r\n    }\r\n\r\n    // Método para remover clientes\r\n    remover():void{\r\n\r\n      this.servico.remover(this.cliente.id)\r\n      .subscribe(retorno => {\r\n\r\n        // Obter posiçao do vetor onde está o cliente\r\n        let posicao = this.clientes.findIndex(obj => {\r\n          return obj.id == this.cliente.id;\r\n        });\r\n\r\n        // Remover cliente do vetor\r\n        this.clientes.splice(posicao, 1);\r\n\r\n        // Limpar formulário\r\n        this.cliente = new Cliente();\r\n\r\n        // Visibilidade dos botões\r\n        this.btnCadastro = true;\r\n\r\n        // Visibilidade da tabela\r\n        this.tabela = true;\r\n\r\n        // Mensagem\r\n        alert('Cliente removido com sucesso!');\r\n\r\n      });\r\n\r\n    }\r\n\r\n    // Método para cancelar\r\n    cancelar():void{\r\n\r\n      // Limpar formulário\r\n      this.cliente = new Cliente();\r\n\r\n      // Visibilidade dos botões\r\n      this.btnCadastro = true;\r\n\r\n      // Visibilidade da tabela\r\n      this.tabela = true;\r\n\r\n    }\r\n\r\n    // Método de inicialização\r\n    ngOnInit(){\r\n      this.selecionar();\r\n    }\r\n\r\n}\r\n","<div class=\"container text-center\">\r\n    <div class=\"row align-items-start\">\r\n        <div class=\"col-12 col-sm-12 \">\r\n            <form>\r\n                <img src=\"assets/andersonfelix.webp\">\r\n                <div class=\"mb-3\">\r\n                    <input type=\"text\"   placeholder=\"Nome\"   class=\"form-control\" name=\"name\"   [(ngModel)]=\"cliente.name\">                  \r\n                    \r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <input type=\"number\" placeholder=\"Idade\"  class=\"form-control\" name=\"age\"  [(ngModel)]=\"cliente.age\">\r\n                    \r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <input type=\"text\"   placeholder=\"Cidade\" class=\"form-control\" name=\"city\" [(ngModel)]=\"cliente.city\">\r\n                    \r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n                  <input type=\"text\"   placeholder=\"Estado\" class=\"form-control\" name=\"state\" [(ngModel)]=\"cliente.state\">\r\n                </div>\r\n\r\n                <input type=\"button\" value=\"Cadastrar\"  *ngIf=\"btnCadastro\"   class=\"btn btn-primary\"   (click)=\"cadastrar()\">\r\n                <input type=\"button\" value=\"Alterar\"    *ngIf=\"!btnCadastro\"  class=\"btn btn-warning\"   (click)=\"editar()\">\r\n                <input type=\"button\" value=\"Remover\"    *ngIf=\"!btnCadastro\"  class=\"btn btn-danger\"    (click)=\"remover()\">\r\n                <input type=\"button\" value=\"Cancelar\"   *ngIf=\"!btnCadastro\"  class=\"btn btn-secondary\" (click)=\"cancelar()\">\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<table class=\"table\" *ngIf=\"tabela\">\r\n    <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>Nome</th>\r\n            <th>Idade</th>\r\n            <th>Cidade</th>\r\n            <th>Estado</th>\r\n            <th>Selecionar</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let c of clientes; index as i\">\r\n            <td>{{i+1}}</td>\r\n            <td>{{c.name}}</td>\r\n            <td>{{c.age}}</td>\r\n            <td>{{c.city}}</td>\r\n            <td>{{c.state}}</td>\r\n            <td><button class=\"btn btn-success\" (click)=\"selecionarCliente(i)\">Selecionar</button></td>\r\n        </tr>\r\n    </tbody>\r\n</table>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}